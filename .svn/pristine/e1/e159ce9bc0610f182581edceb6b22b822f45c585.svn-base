@model IMIC.BUSINESSOBJECTS.EntityObject.AccountObject

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}



<div class="portlet-body">
    @using (Html.BeginForm("Update", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        Html.HiddenFor(model => model.AccountID);
        <div class="form-horizontal">
            <h4>Danh sách thành viên</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            
            <div class="form-group hidden">
                @Html.Label("Mã Thành Viên", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AccountID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AccountID, "", new { @class = "text-danger" })
                </div>
            </div>
            
            
            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" ,id="username" })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    <span id="checkusername"></span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="control-label col-md-2">Chức vụ</div>
                <div class="col-md-10">
                    @{
                        var listRole = ViewBag.ListRole;
                        List<SelectListItem> list = new List<SelectListItem>();
                        foreach (var item in listRole)
                        {
                            list.Add(new SelectListItem()
                            {
                                Value = "" + item.RoleID,
                                Text = item.RoleName
                            });
                        }
                    }
                    @Html.DropDownListFor(model => model.RoleID, list, new { @class = "form-control" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Avatar, new { @type = "file", @name = "Avatar", id = "Avatar" })
                    <img src="~/Areas/Admin/Content/assets/ImageAccount/@Model.Avatar" alt="" height="50" width="50" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.FullName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Mobile, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBoxFor(model => model.Active, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BirthDay, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.BirthDay, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BirthDay, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Edit" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Về trang danh sách thành viên", "Index")
    </div>
</div>
<script>
    $('#username').on('change', function () {
        var username = $('#username').val();
        debugger;
        $.ajax({
            type: "POST",
            url:'@Url.Action("check", "Account")',
            data: {username: username},
            success: function(data){

                if(data == '0')//if ajax_check_username.php return value "0"
                {
                    $("#checkusername").html('<font color="Green"> Tài khoản hợp lệ </font>  ');
                    //add this image to the span with id "#availability_status"
                }
                else if (data == '1')//if it returns "1"
                {
                    $("#checkusername").html('<font color="red">Tài khoản đã tồn tại </font>');
                }
            }
        });
    })
</script>


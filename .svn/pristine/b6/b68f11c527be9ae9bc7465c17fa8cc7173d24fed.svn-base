using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using IMIC.BUSINESSOBJECTS.EntityObject;
using IMIC.CONTROLLERS.BCL;
using System.IO;
using CarOnline.Commom;

namespace CarOnline.Areas.Admin.Controllers
{
    public class AccountController : BaseController
    {
        // GET: Admin/Account
        public ActionResult Index()
        {
            AccountObject objAcc = (AccountObject)Session[Commom.Comomconstants.USER_SESSION];
            if (objAcc == null)
            {
                return RedirectToAction("Login");              
            }
            else if (objAcc.RoleID == 0)
            {
                return View(new AccountBCL().GetAll());
            }
            var lisAccount = new AccountBCL().GetAll().Where(x => x.RoleID != 0 && x.RoleID !=1||x.AccountID==objAcc.AccountID);
            return View(lisAccount);

        }
        // Create: Admin/Account
        public enum Ordernumber
        {
            SuperAmin=0,
            Admin=1,
            Moderator=2,
            Member=3
        }
        Ordernumber GetOderNumber(Guid AccountID)
        {
            AccountObject objAccout = new AccountBCL().GetByID(AccountID);
            var objrole = new RoleBCL().GetById(objAccout.RoleID);
            switch (objrole.RoleName)
            {
                case"SuperAmin":
                    return Ordernumber.SuperAmin;
                case"Admin":
                    return Ordernumber.Admin;
                case"Moderator":
                    return Ordernumber.Moderator;
                default:
                    return Ordernumber.Member;
            }          
        }
        Ordernumber GetOderNumberRole(byte RoldID)
        {
            var objrole = new RoleBCL().GetById(RoldID);
            switch (objrole.RoleName)
            {
                case"SuperAmin":
                    return Ordernumber.SuperAmin;
                case"Admin":
                    return Ordernumber.Admin;
                case"Moderator":
                    return Ordernumber.Moderator;
                default:
                    return Ordernumber.Member;
            }
        }
        public ActionResult Create()
        {
            AccountObject objAccount=(AccountObject)Session[Comomconstants.USER_SESSION];
            var RoleOfUser = GetOderNumber(objAccount.AccountID);
            ViewBag.ListRole = new RoleBCL().GetAll().Where(x => GetOderNumberRole(x.RoleID) > RoleOfUser);
            return View();
        }
        [HttpPost]
        public ActionResult Create(AccountObject obj, HttpPostedFileBase Avatar)
        {
            if (ModelState.IsValid)
            {
                    if (Avatar != null)
                    {
                        string name = System.IO.Path.GetFileName(Avatar.FileName);
                        string path = System.IO.Path.Combine(Server.MapPath("~/Areas/Admin/Content/assets/ImageAccount/images"), name);
                        Avatar.SaveAs(path);
                        obj.Avatar = Avatar.FileName;
                    }
                    obj.AccountID = Guid.NewGuid();
                    obj.JoinDay = DateTime.Now;
                    obj.IsDeleted = false;
                    var ob = new AccountBCL().Insert(obj);
                    if (ob == true)
                    {
                        return RedirectToAction("Index", "Account");
                    }
                    else
                    {
                        ModelState.AddModelError("", "Thêm thất bại");
                    }             
            }
            return View("index");
        }
        // Update: Admin/Account
        public ActionResult Update(Guid id)
        {          
            var RoleOfUser = GetOderNumber(id);
            ViewBag.ListRole = new RoleBCL().GetAll().Where(x => GetOderNumberRole(x.RoleID) >= RoleOfUser);
            return View(new AccountBCL().GetByID(id));
        }
        [HttpPost]
        public ActionResult Update(AccountObject obj, HttpPostedFileBase Avatar, Guid ID)
        {
            var List = new AccountBCL().GetByID(ID);
            if (Avatar != null)
            {
                string name = System.IO.Path.GetFileName(Avatar.FileName);
                string path = System.IO.Path.Combine(Server.MapPath("~/Areas/Admin/Content/assets/ImageAccount/images"), name);
                Avatar.SaveAs(path);
                obj.Avatar = Avatar.FileName;
                new AccountBCL().Update(obj);
                return RedirectToAction("Index", "Account");
            }
            else
            {
                obj.Avatar = List.Avatar;
                new AccountBCL().Update(obj);
                return RedirectToAction("Index");
            }
        }

        [HttpPost]
        public JsonResult Delete(System.Guid id)
        {
            var result = new AccountBCL().Delete(id);
            return Json(result ? new { rs = true } : new { rs = false });
        }
        //check username
        [HttpPost]
        public JsonResult check(string username)
        {
            var result = new AccountBCL().CheckUsername(username);
            if (result !=null)
            {
                return Json(new string[]{"1","Tài khoản "+result.FullName+ " đã tồn tại"});
            }
            else
            {
                return Json(new string[] { "0", "Tài khoản " + username + " có thể sử dụng" });
            }
                   
        }
    }
}